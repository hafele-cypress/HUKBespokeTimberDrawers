///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HUKBespokeTimberDrawers
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Filter_results_by_quote_ref_order_ref_and_filter_by_status recording.
    /// </summary>
    [TestModule("c01bc04e-ebf9-46f8-bd07-d16601283ccb", ModuleType.Recording, 1)]
    public partial class Filter_results_by_quote_ref_order_ref_and_filter_by_status : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HUKBespokeTimberDrawersRepository repository.
        /// </summary>
        public static HUKBespokeTimberDrawersRepository repo = HUKBespokeTimberDrawersRepository.Instance;

        static Filter_results_by_quote_ref_order_ref_and_filter_by_status instance = new Filter_results_by_quote_ref_order_ref_and_filter_by_status();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Filter_results_by_quote_ref_order_ref_and_filter_by_status()
        {
            Ref = "";
            QuoteNumber = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Filter_results_by_quote_ref_order_ref_and_filter_by_status Instance
        {
            get { return instance; }
        }

#region Variables

        string _Ref;

        /// <summary>
        /// Gets or sets the value of variable Ref.
        /// </summary>
        [TestVariable("eeb8ace7-9d9b-45af-80a7-f38f8018fcbf")]
        public string Ref
        {
            get { return _Ref; }
            set { _Ref = value; }
        }

        string _QuoteNumber;

        /// <summary>
        /// Gets or sets the value of variable QuoteNumber.
        /// </summary>
        [TestVariable("0de78221-0de3-43a5-b53f-1eaaceb0a05d")]
        public string QuoteNumber
        {
            get { return _QuoteNumber; }
            set { _QuoteNumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'MyHafelePortal.Number_Of_Items_Per_PageSize_'.", repo.MyHafelePortal.Number_Of_Items_Per_PageSize_Info, new RecordItemIndex(0));
            //repo.MyHafelePortal.Number_Of_Items_Per_PageSize_.EnsureVisible();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.Number_Of_Items_Per_PageSize_' at Center.", repo.MyHafelePortal.Number_Of_Items_Per_PageSize_Info, new RecordItemIndex(1));
            //repo.MyHafelePortal.Number_Of_Items_Per_PageSize_.Click();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(2));
            //Delay.Duration(2000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal._20_Items_PerPage' at Center.", repo.MyHafelePortal._20_Items_PerPageInfo, new RecordItemIndex(3));
            //repo.MyHafelePortal._20_Items_PerPage.Click();
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Ref' with focus on 'MyHafelePortal.Quote_OrderSearch'.", repo.MyHafelePortal.Quote_OrderSearchInfo, new RecordItemIndex(4));
            repo.MyHafelePortal.Quote_OrderSearch.PressKeys(Ref);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyHafelePortal.Quote_Ref_rci2950'.", repo.MyHafelePortal.Quote_Ref_rci2950Info, new RecordItemIndex(5));
            Validate.Exists(repo.MyHafelePortal.Quote_Ref_rci2950Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}' with focus on 'MyHafelePortal.Quote_OrderSearch'.", repo.MyHafelePortal.Quote_OrderSearchInfo, new RecordItemIndex(6));
            repo.MyHafelePortal.Quote_OrderSearch.PressKeys("{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(7));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$QuoteNumber' with focus on 'MyHafelePortal.Quote_OrderSearch'.", repo.MyHafelePortal.Quote_OrderSearchInfo, new RecordItemIndex(8));
            repo.MyHafelePortal.Quote_OrderSearch.PressKeys(QuoteNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyHafelePortal.Quote_OrderNumber_4635'.", repo.MyHafelePortal.Quote_OrderNumber_4635Info, new RecordItemIndex(9));
            Validate.Exists(repo.MyHafelePortal.Quote_OrderNumber_4635Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyHafelePortal.Quote_Overview'.", repo.MyHafelePortal.Quote_OverviewInfo, new RecordItemIndex(10));
            Validate.Exists(repo.MyHafelePortal.Quote_OverviewInfo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MyHafelePortal.Quote_Overview, false, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyHafelePortal.Quote_DraftBadge'.", repo.MyHafelePortal.Quote_DraftBadgeInfo, new RecordItemIndex(12));
            Validate.Exists(repo.MyHafelePortal.Quote_DraftBadgeInfo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MyHafelePortal.Quote_DraftBadge, false, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'MyHafelePortal'.", repo.MyHafelePortal.SelfInfo, new RecordItemIndex(14));
            repo.MyHafelePortal.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
