///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HUKBespokeTimberDrawers
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BTD_AddManualDeliveryAddress recording.
    /// </summary>
    [TestModule("ce1551dd-aadb-4529-814b-16d6dd954b66", ModuleType.Recording, 1)]
    public partial class BTD_AddManualDeliveryAddress : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HUKBespokeTimberDrawersRepository repository.
        /// </summary>
        public static HUKBespokeTimberDrawersRepository repo = HUKBespokeTimberDrawersRepository.Instance;

        static BTD_AddManualDeliveryAddress instance = new BTD_AddManualDeliveryAddress();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BTD_AddManualDeliveryAddress()
        {
            ContactName = "";
            TelephoneNumber = "";
            CompanyName = "";
            AddressLine1 = "";
            AddressLine2 = "";
            Town_City = "";
            County = "";
            Postcode = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BTD_AddManualDeliveryAddress Instance
        {
            get { return instance; }
        }

#region Variables

        string _ContactName;

        /// <summary>
        /// Gets or sets the value of variable ContactName.
        /// </summary>
        [TestVariable("14fa3c68-7a47-49f8-b119-b11ec3e698c7")]
        public string ContactName
        {
            get { return _ContactName; }
            set { _ContactName = value; }
        }

        string _TelephoneNumber;

        /// <summary>
        /// Gets or sets the value of variable TelephoneNumber.
        /// </summary>
        [TestVariable("90b8f8e0-8494-4cea-8a78-750e6b54adf4")]
        public string TelephoneNumber
        {
            get { return _TelephoneNumber; }
            set { _TelephoneNumber = value; }
        }

        string _CompanyName;

        /// <summary>
        /// Gets or sets the value of variable CompanyName.
        /// </summary>
        [TestVariable("fcae62c6-7184-4751-8fc2-90885f072d4e")]
        public string CompanyName
        {
            get { return _CompanyName; }
            set { _CompanyName = value; }
        }

        string _AddressLine1;

        /// <summary>
        /// Gets or sets the value of variable AddressLine1.
        /// </summary>
        [TestVariable("04fcb4ea-6eb7-4ff2-96cd-9993f7319904")]
        public string AddressLine1
        {
            get { return _AddressLine1; }
            set { _AddressLine1 = value; }
        }

        string _AddressLine2;

        /// <summary>
        /// Gets or sets the value of variable AddressLine2.
        /// </summary>
        [TestVariable("828c0238-441e-45fa-bc8a-bfa9b7c25e1f")]
        public string AddressLine2
        {
            get { return _AddressLine2; }
            set { _AddressLine2 = value; }
        }

        string _Town_City;

        /// <summary>
        /// Gets or sets the value of variable Town_City.
        /// </summary>
        [TestVariable("0e58e758-64f3-4eb2-b51c-4ac7270d90df")]
        public string Town_City
        {
            get { return _Town_City; }
            set { _Town_City = value; }
        }

        string _County;

        /// <summary>
        /// Gets or sets the value of variable County.
        /// </summary>
        [TestVariable("4a294ad6-5d70-495a-847a-bbc522f10bb6")]
        public string County
        {
            get { return _County; }
            set { _County = value; }
        }

        string _Postcode;

        /// <summary>
        /// Gets or sets the value of variable Postcode.
        /// </summary>
        [TestVariable("28b2a5ef-c57c-41f9-80cf-dfabda1eb8c5")]
        public string Postcode
        {
            get { return _Postcode; }
            set { _Postcode = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'MyHafelePortal'.", repo.MyHafelePortal.SelfInfo, new RecordItemIndex(0));
            repo.MyHafelePortal.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(1));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.BespokeDrawers' at Center.", repo.MyHafelePortal.BespokeDrawersInfo, new RecordItemIndex(2));
            repo.MyHafelePortal.BespokeDrawers.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'MyHafelePortal.StartNewQuote'.", repo.MyHafelePortal.StartNewQuoteInfo, new RecordItemIndex(3));
            repo.MyHafelePortal.StartNewQuote.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'MyHafelePortal.AddDeliveryAddress'.", repo.MyHafelePortal.AddDeliveryAddressInfo, new RecordItemIndex(4));
            repo.MyHafelePortal.AddDeliveryAddress.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.AddDeliveryAddress' at Center.", repo.MyHafelePortal.AddDeliveryAddressInfo, new RecordItemIndex(5));
            repo.MyHafelePortal.AddDeliveryAddress.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryContact_ContactName' at Center.", repo.MyHafelePortal.DeliveryContact_ContactNameInfo, new RecordItemIndex(6));
            repo.MyHafelePortal.DeliveryContact_ContactName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactName' with focus on 'MyHafelePortal.DeliveryContact_ContactName'.", repo.MyHafelePortal.DeliveryContact_ContactNameInfo, new RecordItemIndex(7));
            repo.MyHafelePortal.DeliveryContact_ContactName.PressKeys(ContactName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'MyHafelePortal.DeliveryContact_TelephoneNumber'.", repo.MyHafelePortal.DeliveryContact_TelephoneNumberInfo, new RecordItemIndex(8));
            repo.MyHafelePortal.DeliveryContact_TelephoneNumber.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryContact_TelephoneNumber' at Center.", repo.MyHafelePortal.DeliveryContact_TelephoneNumberInfo, new RecordItemIndex(9));
            repo.MyHafelePortal.DeliveryContact_TelephoneNumber.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$TelephoneNumber' with focus on 'MyHafelePortal.DeliveryContact_TelephoneNumber'.", repo.MyHafelePortal.DeliveryContact_TelephoneNumberInfo, new RecordItemIndex(10));
            repo.MyHafelePortal.DeliveryContact_TelephoneNumber.PressKeys(TelephoneNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_AddAddressManually' at Center.", repo.MyHafelePortal.DeliveryAddress_AddAddressManuallyInfo, new RecordItemIndex(11));
            repo.MyHafelePortal.DeliveryAddress_AddAddressManually.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$CompanyName' with focus on 'MyHafelePortal.DeliveryAddress_AddAddressManually'.", repo.MyHafelePortal.DeliveryAddress_AddAddressManuallyInfo, new RecordItemIndex(12));
            repo.MyHafelePortal.DeliveryAddress_AddAddressManually.PressKeys(CompanyName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_AddressLine1' at Center.", repo.MyHafelePortal.DeliveryAddress_AddressLine1Info, new RecordItemIndex(13));
            repo.MyHafelePortal.DeliveryAddress_AddressLine1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AddressLine1' with focus on 'MyHafelePortal.DeliveryAddress_AddressLine1'.", repo.MyHafelePortal.DeliveryAddress_AddressLine1Info, new RecordItemIndex(14));
            repo.MyHafelePortal.DeliveryAddress_AddressLine1.PressKeys(AddressLine1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_AddressLine2' at Center.", repo.MyHafelePortal.DeliveryAddress_AddressLine2Info, new RecordItemIndex(15));
            repo.MyHafelePortal.DeliveryAddress_AddressLine2.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AddressLine1' with focus on 'MyHafelePortal.DeliveryAddress_AddressLine2'.", repo.MyHafelePortal.DeliveryAddress_AddressLine2Info, new RecordItemIndex(16));
            repo.MyHafelePortal.DeliveryAddress_AddressLine2.PressKeys(AddressLine1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_AddressLine2' at Center.", repo.MyHafelePortal.DeliveryAddress_AddressLine2Info, new RecordItemIndex(17));
            repo.MyHafelePortal.DeliveryAddress_AddressLine2.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AddressLine2' with focus on 'MyHafelePortal.DeliveryAddress_AddressLine2'.", repo.MyHafelePortal.DeliveryAddress_AddressLine2Info, new RecordItemIndex(18));
            repo.MyHafelePortal.DeliveryAddress_AddressLine2.PressKeys(AddressLine2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_TownCity' at Center.", repo.MyHafelePortal.DeliveryAddress_TownCityInfo, new RecordItemIndex(19));
            repo.MyHafelePortal.DeliveryAddress_TownCity.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Town_City' with focus on 'MyHafelePortal.DeliveryAddress_TownCity'.", repo.MyHafelePortal.DeliveryAddress_TownCityInfo, new RecordItemIndex(20));
            repo.MyHafelePortal.DeliveryAddress_TownCity.PressKeys(Town_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_County' at Center.", repo.MyHafelePortal.DeliveryAddress_CountyInfo, new RecordItemIndex(21));
            repo.MyHafelePortal.DeliveryAddress_County.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$County' with focus on 'MyHafelePortal.DeliveryAddress_County'.", repo.MyHafelePortal.DeliveryAddress_CountyInfo, new RecordItemIndex(22));
            repo.MyHafelePortal.DeliveryAddress_County.PressKeys(County);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_Postcode' at Center.", repo.MyHafelePortal.DeliveryAddress_PostcodeInfo, new RecordItemIndex(23));
            repo.MyHafelePortal.DeliveryAddress_Postcode.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Postcode' with focus on 'MyHafelePortal.DeliveryAddress_Postcode'.", repo.MyHafelePortal.DeliveryAddress_PostcodeInfo, new RecordItemIndex(24));
            repo.MyHafelePortal.DeliveryAddress_Postcode.PressKeys(Postcode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.AddDeliveryAddressButton' at Center.", repo.MyHafelePortal.AddDeliveryAddressButtonInfo, new RecordItemIndex(25));
            repo.MyHafelePortal.AddDeliveryAddressButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'MyHafelePortal'.", repo.MyHafelePortal.SelfInfo, new RecordItemIndex(26));
            repo.MyHafelePortal.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'MyHafelePortal.DeliveryAddress_NameCheckSummery_JohnSmith'.", repo.MyHafelePortal.DeliveryAddress_NameCheckSummery_JohnSmithInfo, new RecordItemIndex(27));
                Validate.Exists(repo.MyHafelePortal.DeliveryAddress_NameCheckSummery_JohnSmithInfo, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(27)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'MyHafelePortal.DeliveryAddress_AddressCheckSummery'.", repo.MyHafelePortal.DeliveryAddress_AddressCheckSummeryInfo, new RecordItemIndex(28));
                Validate.Exists(repo.MyHafelePortal.DeliveryAddress_AddressCheckSummeryInfo, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(28)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'MyHafelePortal.DeliveryAddressSummery'.", repo.MyHafelePortal.DeliveryAddressSummeryInfo, new RecordItemIndex(29));
                Validate.Exists(repo.MyHafelePortal.DeliveryAddressSummeryInfo, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(29)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
