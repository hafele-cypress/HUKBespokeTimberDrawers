///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HUKBespokeTimberDrawers
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BTD_Edit_Existing_Delivery_Address recording.
    /// </summary>
    [TestModule("9256728c-823d-4fdf-82b1-15bdf454fc0a", ModuleType.Recording, 1)]
    public partial class BTD_Edit_Existing_Delivery_Address : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HUKBespokeTimberDrawersRepository repository.
        /// </summary>
        public static HUKBespokeTimberDrawersRepository repo = HUKBespokeTimberDrawersRepository.Instance;

        static BTD_Edit_Existing_Delivery_Address instance = new BTD_Edit_Existing_Delivery_Address();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BTD_Edit_Existing_Delivery_Address()
        {
            ContactName = "";
            TelephoneNumber = "";
            CompanyName = "";
            AddressLine1 = "";
            AddressLine2 = "";
            Town_City = "";
            County = "";
            Postcode = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BTD_Edit_Existing_Delivery_Address Instance
        {
            get { return instance; }
        }

#region Variables

        string _ContactName;

        /// <summary>
        /// Gets or sets the value of variable ContactName.
        /// </summary>
        [TestVariable("704bd2dc-23ab-4534-9196-aaee5eb0c596")]
        public string ContactName
        {
            get { return _ContactName; }
            set { _ContactName = value; }
        }

        string _TelephoneNumber;

        /// <summary>
        /// Gets or sets the value of variable TelephoneNumber.
        /// </summary>
        [TestVariable("8f120e1f-fc60-4cd2-9e84-c6ced58b2513")]
        public string TelephoneNumber
        {
            get { return _TelephoneNumber; }
            set { _TelephoneNumber = value; }
        }

        string _CompanyName;

        /// <summary>
        /// Gets or sets the value of variable CompanyName.
        /// </summary>
        [TestVariable("d0f3dddd-28fa-438d-a880-7256e923f88a")]
        public string CompanyName
        {
            get { return _CompanyName; }
            set { _CompanyName = value; }
        }

        string _AddressLine1;

        /// <summary>
        /// Gets or sets the value of variable AddressLine1.
        /// </summary>
        [TestVariable("f311bfc7-82d8-4123-80e3-ec9cabdfb34e")]
        public string AddressLine1
        {
            get { return _AddressLine1; }
            set { _AddressLine1 = value; }
        }

        string _AddressLine2;

        /// <summary>
        /// Gets or sets the value of variable AddressLine2.
        /// </summary>
        [TestVariable("eb435a08-37f1-47d6-bc3b-792ec5c14ee4")]
        public string AddressLine2
        {
            get { return _AddressLine2; }
            set { _AddressLine2 = value; }
        }

        string _Town_City;

        /// <summary>
        /// Gets or sets the value of variable Town_City.
        /// </summary>
        [TestVariable("1343d6e9-8dd3-4d40-8f44-f5daa8d194e4")]
        public string Town_City
        {
            get { return _Town_City; }
            set { _Town_City = value; }
        }

        string _County;

        /// <summary>
        /// Gets or sets the value of variable County.
        /// </summary>
        [TestVariable("c79c6f96-5a37-4fff-a212-00ba40e31008")]
        public string County
        {
            get { return _County; }
            set { _County = value; }
        }

        string _Postcode;

        /// <summary>
        /// Gets or sets the value of variable Postcode.
        /// </summary>
        [TestVariable("dece759b-1ce2-40cc-9f03-dadc0e674e48")]
        public string Postcode
        {
            get { return _Postcode; }
            set { _Postcode = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'MyHafelePortal.DeliveryAddress_Edit'.", repo.MyHafelePortal.DeliveryAddress_EditInfo, new RecordItemIndex(0));
            repo.MyHafelePortal.DeliveryAddress_Edit.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyHafelePortal.DeliveryAddress_Edit'.", repo.MyHafelePortal.DeliveryAddress_EditInfo, new RecordItemIndex(1));
            Validate.Exists(repo.MyHafelePortal.DeliveryAddress_EditInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_Edit' at Center.", repo.MyHafelePortal.DeliveryAddress_EditInfo, new RecordItemIndex(2));
            repo.MyHafelePortal.DeliveryAddress_Edit.Click();
            Delay.Milliseconds(200);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MyHafelePortal.UpdateDeliveryAddress, false, new RecordItemIndex(3));
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'MyHafelePortal.UpdateDeliveryAddress'.", repo.MyHafelePortal.UpdateDeliveryAddressInfo, new RecordItemIndex(4));
                Validate.Exists(repo.MyHafelePortal.UpdateDeliveryAddressInfo, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}{Back}{Back}{Back}{Back}{Back}{Back}Test Company' with focus on 'MyHafelePortal.DeliveryAddress_CompanyName'.", repo.MyHafelePortal.DeliveryAddress_CompanyNameInfo, new RecordItemIndex(5));
            repo.MyHafelePortal.DeliveryAddress_CompanyName.PressKeys("{Back}{Back}{Back}{Back}{Back}{Back}{Back}Test Company");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_AddressLine1' at Center.", repo.MyHafelePortal.DeliveryAddress_AddressLine1Info, new RecordItemIndex(6));
            repo.MyHafelePortal.DeliveryAddress_AddressLine1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}Test Street' with focus on 'MyHafelePortal.DeliveryAddress_AddressLine1'.", repo.MyHafelePortal.DeliveryAddress_AddressLine1Info, new RecordItemIndex(7));
            repo.MyHafelePortal.DeliveryAddress_AddressLine1.PressKeys("{Back}Test Street");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_AddressLine2' at Center.", repo.MyHafelePortal.DeliveryAddress_AddressLine2Info, new RecordItemIndex(8));
            repo.MyHafelePortal.DeliveryAddress_AddressLine2.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}{Back}{Back}{Back}Test Street' with focus on 'MyHafelePortal.DeliveryAddress_AddressLine2'.", repo.MyHafelePortal.DeliveryAddress_AddressLine2Info, new RecordItemIndex(9));
            repo.MyHafelePortal.DeliveryAddress_AddressLine2.PressKeys("{Back}{Back}{Back}{Back}Test Street");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_AddressLine2' at Center.", repo.MyHafelePortal.DeliveryAddress_AddressLine2Info, new RecordItemIndex(10));
            repo.MyHafelePortal.DeliveryAddress_AddressLine2.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Test' with focus on 'MyHafelePortal.DeliveryAddress_AddressLine2'.", repo.MyHafelePortal.DeliveryAddress_AddressLine2Info, new RecordItemIndex(11));
            repo.MyHafelePortal.DeliveryAddress_AddressLine2.PressKeys("Test");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_TownCity' at Center.", repo.MyHafelePortal.DeliveryAddress_TownCityInfo, new RecordItemIndex(12));
            repo.MyHafelePortal.DeliveryAddress_TownCity.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}{Back}{Back}{Back}{Back}Testville' with focus on 'MyHafelePortal.DeliveryAddress_TownCity'.", repo.MyHafelePortal.DeliveryAddress_TownCityInfo, new RecordItemIndex(13));
            repo.MyHafelePortal.DeliveryAddress_TownCity.PressKeys("{Back}{Back}{Back}{Back}{Back}Testville");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_County' at Center.", repo.MyHafelePortal.DeliveryAddress_CountyInfo, new RecordItemIndex(14));
            repo.MyHafelePortal.DeliveryAddress_County.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}Testshire' with focus on 'MyHafelePortal.DeliveryAddress_County'.", repo.MyHafelePortal.DeliveryAddress_CountyInfo, new RecordItemIndex(15));
            repo.MyHafelePortal.DeliveryAddress_County.PressKeys("{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}Testshire");
            Delay.Milliseconds(0);
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "", repo.MyHafelePortal.UpdateDeliveryAddress, false, new RecordItemIndex(16));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(16)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.DeliveryAddress_UpdateDeliveryAddress' at Center.", repo.MyHafelePortal.DeliveryAddress_UpdateDeliveryAddressInfo, new RecordItemIndex(17));
            repo.MyHafelePortal.DeliveryAddress_UpdateDeliveryAddress.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'MyHafelePortal.DeliveryAddressSummery'.", repo.MyHafelePortal.DeliveryAddressSummeryInfo, new RecordItemIndex(18));
            repo.MyHafelePortal.DeliveryAddressSummery.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MyHafelePortal.DeliveryAddressSummery, false, new RecordItemIndex(19));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyHafelePortal.DeliveryAddressSummery'.", repo.MyHafelePortal.DeliveryAddressSummeryInfo, new RecordItemIndex(20));
            Validate.Exists(repo.MyHafelePortal.DeliveryAddressSummeryInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(21));
            Delay.Duration(2000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
