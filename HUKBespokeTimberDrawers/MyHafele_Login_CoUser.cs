///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HUKBespokeTimberDrawers
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The MyHafele_Login_CoUser recording.
    /// </summary>
    [TestModule("9e3ef60a-c40f-4df6-ad6b-27c9ac7eef44", ModuleType.Recording, 1)]
    public partial class MyHafele_Login_CoUser : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HUKBespokeTimberDrawersRepository repository.
        /// </summary>
        public static HUKBespokeTimberDrawersRepository repo = HUKBespokeTimberDrawersRepository.Instance;

        static MyHafele_Login_CoUser instance = new MyHafele_Login_CoUser();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public MyHafele_Login_CoUser()
        {
            CustomerNumber = "310077";
            Password = "MYNEWPASSWORD123";
            CoUserUsername = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static MyHafele_Login_CoUser Instance
        {
            get { return instance; }
        }

#region Variables

        string _CustomerNumber;

        /// <summary>
        /// Gets or sets the value of variable CustomerNumber.
        /// </summary>
        [TestVariable("3ea29dcb-c9f5-44d8-897c-cd27ea2b62b7")]
        public string CustomerNumber
        {
            get { return _CustomerNumber; }
            set { _CustomerNumber = value; }
        }

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("b12592d2-c068-4b43-8600-8fc4fc3eefec")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

        string _CoUserUsername;

        /// <summary>
        /// Gets or sets the value of variable CoUserUsername.
        /// </summary>
        [TestVariable("d6d8c3ec-92d3-484c-a5c2-010acf7e8058")]
        public string CoUserUsername
        {
            get { return _CoUserUsername; }
            set { _CoUserUsername = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyHafelePortal.PleaseLogin' at Center.", repo.MyHafelePortal.PleaseLoginInfo, new RecordItemIndex(0));
            repo.MyHafelePortal.PleaseLogin.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Username' at 41;21.", repo.ApplicationUnderTest.UsernameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.Username.Click("41;21");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$CustomerNumber' with focus on 'ApplicationUnderTest.Username'.", repo.ApplicationUnderTest.UsernameInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.Username.PressKeys(CustomerNumber, 20);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CoUser' at Center.", repo.ApplicationUnderTest.CoUserInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.CoUser.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CoUserName' at Center.", repo.ApplicationUnderTest.CoUserNameInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.CoUserName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.CoUserName'.", repo.ApplicationUnderTest.CoUserNameInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.CoUserName.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$CoUserUsername' with focus on 'ApplicationUnderTest.CoUserName'.", repo.ApplicationUnderTest.CoUserNameInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.CoUserName.PressKeys(CoUserUsername);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Password' at 39;21.", repo.ApplicationUnderTest.PasswordInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.Password.Click("39;21");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Password' with focus on 'ApplicationUnderTest.Password'.", repo.ApplicationUnderTest.PasswordInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.Password.PressKeys(Password, 20);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LoginBtn' at Center.", repo.ApplicationUnderTest.LoginBtnInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.LoginBtn.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(10));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'MyHafelePortal'.", repo.MyHafelePortal.SelfInfo, new RecordItemIndex(11));
            repo.MyHafelePortal.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
